--How many orders were placed in January?
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE length(orderid) = 6 
AND orderid <> 'Order ID';

--How many of the orders from January were from an iPhone?
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE Product = 'iPhone'
AND length(orderid) = 6 
AND orderid <> 'Order ID';

--Select the customer account numbers for all the orders that were placed in February. 
SELECT distinct(acctnum)
FROM bit_db.customers cust
INNER JOIN bit_db.FebSales feb
ON cust.order_id = feb.orderid
WHERE length(orderid) = 6 
AND orderid <> 'Order ID';

--Which product was the cheapest one sold in January, and what was the price?
SELECT 
    product,
    min(price)
FROM bit_db.JanSales

--What is the total revenue for each product sold in January?
SELECT 
    product,
    sum(quantity)*price AS revenue
FROM bit_db.JanSales
GROUP BY product
ORDER BY revenue DESC;

--Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT 
    product,
    sum(quantity),
    sum(quantity)*price as revenue
FROM bit_db.FebSales
WHERE location LIKE '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

--How many customers ordered more than 2 products at a time, and what was the average amount spent for those customers? 
SELECT 
    count(distinct cust.acctnum),
    avg(quantity*price)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id
WHERE Feb.Quantity>2
AND length(orderid) = 6 
AND orderid <> 'Order ID';

-- Looking at orders between 2/13/19 and 2/18/19 in Frbruary.
SELECT orderdate
FROM BIT_DB.FebSales
WHERE orderdate between '02/13/19 00:00' AND '02/18/19 00:00'

--Looking at the location from February Sales that made a purchase on 02/18/19 at 01:35.
SELECT location
FROM BIT_DB.FebSales 
WHERE orderdate = '02/18/19 01:35'

--Finding the number of items ordered in February on 02/18/19.
SELECT sum(quantity)
FROM BIT_DB.FebSales 
WHERE orderdate like '02/18/19%'

--Finding the number of items ordered in February on 02/18/19
SELECT sum(quantity)
FROM BIT_DB.FebSales 
WHERE orderdate like '02/18/19%'

--Finding products that have the word "Batteries" in it in February. 
SELECT distinct(Product)
FROM BIT_DB.FebSales
WHERE Product like '%Batteries%'

--Finding the products and price that end in ".99"
SELECT distinct Product, Price
FROM BIT_DB.FebSales 
WHERE Price like '%.99'

--List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT 
    product,
    sum(quantity) AS total_quantity
FROM bit_db.FebSales
GROUP BY product
ORDER BY total_quantity DESC;

--Which locations in New York received at least 3 orders in January, and how many orders did they each receive?
SELECT 
    distinct(location),
    count(orderid)
FROM bit_db.JanSales
WHERE length(orderid) = 6 
AND orderid <> 'Order ID'
AND location like '%NY%'
GROUP BY location
HAVING count(orderID)>2;

--How many of each type of headphone was sold in February?
SELECT 
    product,
    sum(quantity) AS quantity
FROM bit_db.FebSales
WHERE product like '%Headphone%'
GROUP BY product;

--What was the average amount spent per account in February?
SELECT avg(Quantity*price)
FROM bit_db.FebSales Feb
INNER JOIN bit_db.customers cust
ON Feb.orderid = cust.order_id
WHERE length(orderid) = 6 
AND orderid <> 'Order ID';

--What was the average quantity of products purchased per account in February? 
SELECT *
FROM bit_db.FebSales Feb
INNER JOIN bit_db.customers cust
ON Feb.orderid = cust.order_id;

--Which product brought in the most revenue in January and how much revenue did it bring in total? 
SELECT 
    product,
    sum(quantity*price) AS revenue
FROM bit_db.JanSales
WHERE length(orderid) = 6 
AND orderid <> 'Order ID'
GROUP BY product
ORDER BY revenue desc
LIMIT 1;